public class EnemyPlane extends Thread{
	private int blood;
	private int x,y;
	private int speed;
	private boolean islive;
	Vector<EnemyPlane> enemyPlanes= new Vector<>();
	public EnemyPlane( int x, int y, int speed) {


		this.x = x;
		this.y = y;
		this.speed=speed;
		this.islive=true;

	}
	public void run()
	{	while (true){
		while(blood>=0&&islive)
		{enemyPlanes.add(new EnemyPlane(0,0,10));
			if(this.getY()<0){//
				break;
			}if(hit()){
				this.speed=0;
				break;
		}
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {

				e.printStackTrace();
			}
			y+=speed;
		}
	}
	}
public boolean hit(){
		for(int i=0;i<MyHeroBullets.getY;i++){
			if(MyHeroBullets.getY==this.getY()){
				return true;
			}
		}
}

	public int getX() {
		return x;
	}
	public int getY() {
		return y;
	}
	public int getSpeed() {
		return speed;
	}
	public boolean isIslive() {
		return islive;
	}
	public void setIslive(boolean islive) {
		this.islive = islive;
	}
}
